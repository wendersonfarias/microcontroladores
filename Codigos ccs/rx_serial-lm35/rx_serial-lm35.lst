CCS PCM C Compiler, Version 4.104, 5967               29-mar-23 13:38

               Filename: C:\Users\wende\Desktop\MICRO\microcontroladores\Codigos ccs\rx_serial-lm35\rx_serial-lm35.lst

               ROM used: 255 words (3%)
                         Largest free fragment is 2048
               RAM used: 17 (5%) at main() level
                         21 (6%) worst case
               Stack:    3 worst case (2 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   08B
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.5
001A:  GOTO   01D
001B:  BTFSC  0C.5
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... //#include "C:\Users\wende\Desktop\MICRO\microcontroladores\Codigos ccs\rx_serial-lm35\rx_serial-lm35.h" 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=20000000) 
.................... #use rs232(baud=1200,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=sensor) 
....................  
.................... int1 envia =0; 
.................... int1 recebe = 0; 
.................... int valor = 0; 
.................... int8 recebido = 0; 
....................  
.................... #int_RDA 
.................... void  RDA_isr(void)  
.................... { 
....................    recebido = getc(); 
*
0031:  BTFSS  0C.5
0032:  GOTO   031
0033:  MOVF   1A,W
0034:  MOVWF  29
....................    
....................    valor = recebido; 
0035:  MOVF   29,W
0036:  MOVWF  28
....................  
....................    envia = 1; 
0037:  BSF    27.0
....................       
....................     
.................... } 
....................  
....................  
....................  
0038:  BCF    0C.5
0039:  BCF    0A.3
003A:  BCF    0A.4
003B:  GOTO   01D
.................... void main() 
.................... { 
*
008B:  CLRF   04
008C:  BCF    03.7
008D:  MOVLW  1F
008E:  ANDWF  03,F
008F:  MOVLW  FF
0090:  BSF    03.5
0091:  MOVWF  19
0092:  MOVLW  A2
0093:  MOVWF  18
0094:  MOVLW  90
0095:  BCF    03.5
0096:  MOVWF  18
0097:  BCF    27.0
0098:  BCF    27.1
0099:  CLRF   28
009A:  CLRF   29
009B:  BSF    03.5
009C:  BSF    1F.0
009D:  BSF    1F.1
009E:  BSF    1F.2
009F:  BCF    1F.3
00A0:  MOVLW  07
00A1:  MOVWF  1C
....................  
....................    setup_adc_ports(NO_ANALOGS); 
*
00A5:  BSF    03.5
00A6:  BSF    1F.0
00A7:  BSF    1F.1
00A8:  BSF    1F.2
00A9:  BCF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
00AA:  BCF    1F.6
00AB:  BCF    03.5
00AC:  BCF    1F.6
00AD:  BCF    1F.7
00AE:  BSF    03.5
00AF:  BCF    1F.7
00B0:  BCF    03.5
00B1:  BSF    1F.0
....................    setup_psp(PSP_DISABLED); 
00B2:  BSF    03.5
00B3:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
00B4:  BCF    03.5
00B5:  BCF    14.5
00B6:  BCF    2A.5
00B7:  MOVF   2A,W
00B8:  BSF    03.5
00B9:  MOVWF  07
00BA:  BCF    03.5
00BB:  BSF    2A.4
00BC:  MOVF   2A,W
00BD:  BSF    03.5
00BE:  MOVWF  07
00BF:  BCF    03.5
00C0:  BCF    2A.3
00C1:  MOVF   2A,W
00C2:  BSF    03.5
00C3:  MOVWF  07
00C4:  MOVLW  01
00C5:  BCF    03.5
00C6:  MOVWF  14
00C7:  MOVLW  00
00C8:  BSF    03.5
00C9:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
00CA:  MOVF   01,W
00CB:  ANDLW  C7
00CC:  IORLW  08
00CD:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
00CE:  BCF    03.5
00CF:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
00D0:  MOVLW  00
00D1:  MOVWF  78
00D2:  MOVWF  12
00D3:  MOVLW  00
00D4:  BSF    03.5
00D5:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
00D6:  MOVLW  07
00D7:  MOVWF  1C
00D8:  MOVF   05,W
00D9:  MOVWF  05
00DA:  MOVLW  10
00DB:  MOVWF  77
00DC:  DECFSZ 77,F
00DD:  GOTO   0DC
00DE:  NOP
00DF:  MOVF   1C,W
00E0:  BCF    03.5
00E1:  BCF    0D.6
....................    setup_vref(FALSE); 
00E2:  BSF    03.5
00E3:  CLRF   1D
....................    enable_interrupts(INT_RDA); 
00E4:  BSF    0C.5
....................    enable_interrupts(GLOBAL); 
00E5:  MOVLW  C0
00E6:  BCF    03.5
00E7:  IORWF  0B,F
....................  
....................    while(TRUE){ 
....................       if(envia == 1){ 
00E8:  BTFSS  27.0
00E9:  GOTO   0FD
....................          fprintf(sensor, "%u \n", valor); 
00EA:  MOVF   28,W
00EB:  MOVWF  2B
00EC:  MOVLW  1B
00ED:  MOVWF  2C
00EE:  GOTO   051
00EF:  MOVLW  20
00F0:  BTFSS  0C.4
00F1:  GOTO   0F0
00F2:  MOVWF  19
00F3:  MOVLW  0A
00F4:  BTFSS  0C.4
00F5:  GOTO   0F4
00F6:  MOVWF  19
....................          envia = 0; 
00F7:  BCF    27.0
....................          output_toggle(PIN_D1); 
00F8:  BSF    03.5
00F9:  BCF    08.1
00FA:  MOVLW  02
00FB:  BCF    03.5
00FC:  XORWF  08,F
....................       } 
....................        
....................        
....................    } 
00FD:  GOTO   0E8
....................  
.................... } 
00FE:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
