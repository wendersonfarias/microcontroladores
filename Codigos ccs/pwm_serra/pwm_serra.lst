CCS PCM C Compiler, Version 4.104, 5967               26-fev-23 20:02

               Filename: C:\Users\wende\Desktop\MICRO\pwm_serra\pwm_serra.lst

               ROM used: 188 words (2%)
                         Largest free fragment is 2048
               RAM used: 15 (4%) at main() level
                         15 (4%) worst case
               Stack:    1 worst case (0 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   05A
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #include "C:\Users\wende\Desktop\MICRO\pwm_serra\pwm_serra.h" 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES HS                    	//High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES RESERVED              	//Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=20000000) 
....................  
....................  
.................... int16 cont=0; 
....................  
.................... #int_TIMER1 
.................... void  TIMER1_isr(void)  
.................... { 
....................    if(cont> 100){ 
*
0031:  MOVF   28,F
0032:  BTFSS  03.2
0033:  GOTO   038
0034:  MOVF   27,W
0035:  SUBLW  64
0036:  BTFSC  03.0
0037:  GOTO   03A
....................       cont = 0; 
0038:  CLRF   28
0039:  CLRF   27
....................    } 
....................     
....................    cont = cont + 1; 
003A:  MOVLW  01
003B:  ADDWF  27,F
003C:  BTFSC  03.0
003D:  INCF   28,F
....................     
....................    set_pwm2_duty(cont); 
003E:  MOVF   28,W
003F:  MOVWF  79
0040:  MOVF   27,W
0041:  MOVWF  78
0042:  RRF    79,F
0043:  RRF    78,F
0044:  RRF    79,F
0045:  RRF    78,F
0046:  RRF    79,F
0047:  MOVF   78,W
0048:  MOVWF  1B
0049:  RRF    79,F
004A:  RRF    79,W
004B:  ANDLW  30
004C:  MOVWF  77
004D:  MOVF   1D,W
004E:  ANDLW  CF
004F:  IORWF  77,W
0050:  MOVWF  1D
....................     
....................    output_toggle(PIN_D2); 
0051:  BSF    03.5
0052:  BCF    08.2
0053:  MOVLW  04
0054:  BCF    03.5
0055:  XORWF  08,F
....................     
.................... } 
....................  
....................  
....................  
0056:  BCF    0C.0
0057:  BCF    0A.3
0058:  BCF    0A.4
0059:  GOTO   01D
.................... void main() 
.................... { 
005A:  CLRF   04
005B:  BCF    03.7
005C:  MOVLW  1F
005D:  ANDWF  03,F
005E:  CLRF   28
005F:  CLRF   27
0060:  BSF    03.5
0061:  BSF    1F.0
0062:  BSF    1F.1
0063:  BSF    1F.2
0064:  BCF    1F.3
0065:  MOVLW  07
0066:  MOVWF  1C
....................  
....................    setup_adc_ports(NO_ANALOGS); 
*
006A:  BSF    03.5
006B:  BSF    1F.0
006C:  BSF    1F.1
006D:  BSF    1F.2
006E:  BCF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
006F:  BCF    1F.6
0070:  BCF    03.5
0071:  BCF    1F.6
0072:  BCF    1F.7
0073:  BSF    03.5
0074:  BCF    1F.7
0075:  BCF    03.5
0076:  BSF    1F.0
....................    setup_psp(PSP_DISABLED); 
0077:  BSF    03.5
0078:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
0079:  BCF    03.5
007A:  BCF    14.5
007B:  BCF    29.5
007C:  MOVF   29,W
007D:  BSF    03.5
007E:  MOVWF  07
007F:  BCF    03.5
0080:  BSF    29.4
0081:  MOVF   29,W
0082:  BSF    03.5
0083:  MOVWF  07
0084:  BCF    03.5
0085:  BCF    29.3
0086:  MOVF   29,W
0087:  BSF    03.5
0088:  MOVWF  07
0089:  MOVLW  01
008A:  BCF    03.5
008B:  MOVWF  14
008C:  MOVLW  00
008D:  BSF    03.5
008E:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
008F:  MOVF   01,W
0090:  ANDLW  C7
0091:  IORLW  08
0092:  MOVWF  01
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_4); 
0093:  MOVLW  A5
0094:  BCF    03.5
0095:  MOVWF  10
....................    setup_timer_2(T2_DIV_BY_4,249,1); 
0096:  MOVLW  00
0097:  MOVWF  78
0098:  IORLW  05
0099:  MOVWF  12
009A:  MOVLW  F9
009B:  BSF    03.5
009C:  MOVWF  12
....................    setup_ccp2(CCP_PWM); 
009D:  BCF    03.5
009E:  BCF    29.1
009F:  MOVF   29,W
00A0:  BSF    03.5
00A1:  MOVWF  07
00A2:  BCF    03.5
00A3:  BCF    07.1
00A4:  MOVLW  0C
00A5:  MOVWF  1D
....................    set_pwm2_duty(20); 
00A6:  MOVLW  14
00A7:  MOVWF  1B
....................    setup_comparator(NC_NC_NC_NC); 
00A8:  MOVLW  07
00A9:  BSF    03.5
00AA:  MOVWF  1C
00AB:  MOVF   05,W
00AC:  MOVWF  05
00AD:  MOVLW  10
00AE:  MOVWF  77
00AF:  DECFSZ 77,F
00B0:  GOTO   0AF
00B1:  NOP
00B2:  MOVF   1C,W
00B3:  BCF    03.5
00B4:  BCF    0D.6
....................    setup_vref(FALSE); 
00B5:  BSF    03.5
00B6:  CLRF   1D
....................    enable_interrupts(INT_TIMER1); 
00B7:  BSF    0C.0
....................    enable_interrupts(GLOBAL); 
00B8:  MOVLW  C0
00B9:  BCF    03.5
00BA:  IORWF  0B,F
....................  
....................    // TODO: USER CODE!! 
....................  
.................... } 
00BB:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
