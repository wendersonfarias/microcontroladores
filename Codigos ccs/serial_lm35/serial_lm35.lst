CCS PCM C Compiler, Version 4.104, 5967               28-mar-23 00:18

               Filename: C:\Users\wende\Desktop\MICRO\microcontroladores\Codigos ccs\serial_lm35\serial_lm35.lst

               ROM used: 223 words (3%)
                         Largest free fragment is 2048
               RAM used: 23 (6%) at main() level
                         26 (7%) worst case
               Stack:    2 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   069
0003:  NOP
.................... //#include "C:\Users\wende\Desktop\MICRO\microcontroladores\Codigos ccs\serial_lm35\serial_lm35.h" 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
....................  
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=20000000) 
*
0004:  MOVLW  31
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  BCF    0A.3
0018:  BCF    0A.4
0019:  GOTO   0D8 (RETURN)
.................... #use rs232(baud=1200,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=leitura_lm35) 
....................  
....................  
....................  
.................... void main() 
.................... { 
*
0069:  CLRF   04
006A:  BCF    03.7
006B:  MOVLW  1F
006C:  ANDWF  03,F
006D:  MOVLW  FF
006E:  BSF    03.5
006F:  MOVWF  19
0070:  MOVLW  A2
0071:  MOVWF  18
0072:  MOVLW  90
0073:  BCF    03.5
0074:  MOVWF  18
0075:  BSF    03.5
0076:  BSF    1F.0
0077:  BSF    1F.1
0078:  BSF    1F.2
0079:  BCF    1F.3
007A:  MOVLW  07
007B:  MOVWF  1C
007C:  BCF    03.5
007D:  CLRF   30
....................    int16 leitura; 
....................     
....................    int8 possiveisValores[11]; 
....................    int maior ; 
....................    int cont; 
....................    int temperaturaBruta=0; 
....................     
....................  
....................  
....................     
....................    setup_adc(ADC_CLOCK_DIV_16); 
007E:  BSF    03.5
007F:  BSF    1F.6
0080:  BCF    03.5
0081:  BSF    1F.6
0082:  BCF    1F.7
0083:  BSF    03.5
0084:  BSF    1F.7
0085:  BCF    03.5
0086:  BSF    1F.0
....................    setup_adc_ports(AN0); 
0087:  BSF    03.5
0088:  BCF    1F.0
0089:  BSF    1F.1
008A:  BSF    1F.2
008B:  BSF    1F.3
....................   
....................    set_adc_channel(0); 
008C:  MOVLW  00
008D:  MOVWF  78
008E:  BCF    03.5
008F:  MOVF   1F,W
0090:  ANDLW  C7
0091:  IORWF  78,W
0092:  MOVWF  1F
....................    delay_us(20); 
0093:  MOVLW  21
0094:  MOVWF  77
0095:  DECFSZ 77,F
0096:  GOTO   095
....................  
....................     
....................    while(TRUE){ 
....................       maior = 0; 
0097:  CLRF   2E
....................       for(cont = 0; cont <= 10; cont++){ 
0098:  CLRF   2F
0099:  MOVF   2F,W
009A:  SUBLW  0A
009B:  BTFSS  03.0
009C:  GOTO   0BE
....................          leitura = read_adc(); 
009D:  BSF    1F.2
009E:  BTFSC  1F.2
009F:  GOTO   09E
00A0:  BSF    03.5
00A1:  MOVF   1E,W
00A2:  BCF    03.5
00A3:  MOVWF  21
00A4:  MOVF   1E,W
00A5:  MOVWF  22
....................          delay_us(10); 
00A6:  MOVLW  10
00A7:  MOVWF  77
00A8:  DECFSZ 77,F
00A9:  GOTO   0A8
00AA:  NOP
....................          if(leitura<= 255){ 
00AB:  MOVF   22,W
00AC:  SUBLW  00
00AD:  BTFSS  03.0
00AE:  GOTO   0B6
....................              possiveisValores[cont] = (int8)leitura; 
00AF:  MOVLW  23
00B0:  ADDWF  2F,W
00B1:  MOVWF  04
00B2:  BCF    03.7
00B3:  MOVF   21,W
00B4:  MOVWF  00
....................          } 
....................          else{ 
00B5:  GOTO   0BC
....................              possiveisValores[cont] = 255; 
00B6:  MOVLW  23
00B7:  ADDWF  2F,W
00B8:  MOVWF  04
00B9:  BCF    03.7
00BA:  MOVLW  FF
00BB:  MOVWF  00
....................          } 
....................        
....................       } 
00BC:  INCF   2F,F
00BD:  GOTO   099
....................        
....................        for(cont = 0; cont <= 10; cont++){ 
00BE:  CLRF   2F
00BF:  MOVF   2F,W
00C0:  SUBLW  0A
00C1:  BTFSS  03.0
00C2:  GOTO   0D3
....................          if(maior < possiveisValores[cont]) { 
00C3:  MOVLW  23
00C4:  ADDWF  2F,W
00C5:  MOVWF  04
00C6:  BCF    03.7
00C7:  MOVF   00,W
00C8:  SUBWF  2E,W
00C9:  BTFSC  03.0
00CA:  GOTO   0D1
....................             maior = possiveisValores[cont]; 
00CB:  MOVLW  23
00CC:  ADDWF  2F,W
00CD:  MOVWF  04
00CE:  BCF    03.7
00CF:  MOVF   00,W
00D0:  MOVWF  2E
....................          } 
....................        
....................       } 
00D1:  INCF   2F,F
00D2:  GOTO   0BF
....................        
....................       temperaturaBruta = maior; 
00D3:  MOVF   2E,W
00D4:  MOVWF  30
....................        
....................       delay_ms(20); 
00D5:  MOVLW  14
00D6:  MOVWF  31
00D7:  GOTO   004
....................        
....................       fprintf(leitura_lm35, "%u", temperaturaBruta); 
00D8:  MOVF   30,W
00D9:  MOVWF  31
00DA:  MOVLW  1B
00DB:  MOVWF  32
00DC:  GOTO   02F
....................        
....................        
....................        
....................     
....................    } 
00DD:  GOTO   097
....................  
.................... } 
....................  
....................  
....................  
....................  
00DE:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
