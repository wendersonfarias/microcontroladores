CCS PCM C Compiler, Version 4.104, 5967               22-mar-23 22:38

               Filename: C:\Users\wende\Desktop\MICRO\microcontroladores\Codigos ccs\serial_lm35\serial_lm35.lst

               ROM used: 261 words (3%)
                         Largest free fragment is 2048
               RAM used: 24 (7%) at main() level
                         27 (7%) worst case
               Stack:    2 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   08D
0003:  NOP
.................... //#include "C:\Users\wende\Desktop\MICRO\microcontroladores\Codigos ccs\serial_lm35\serial_lm35.h" 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
....................  
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=20000000) 
*
0004:  MOVLW  31
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... #use rs232(baud=1200,parity=N,xmit=PIN_D2,rcv=PIN_C7,bits=8,stream=leitura_lm35) 
*
002D:  BSF    03.5
002E:  BCF    08.2
002F:  BCF    03.5
0030:  BCF    08.2
0031:  MOVLW  08
0032:  MOVWF  78
0033:  GOTO   034
0034:  NOP
0035:  BSF    78.7
0036:  GOTO   045
0037:  BCF    78.7
0038:  RRF    33,F
0039:  BTFSC  03.0
003A:  BSF    08.2
003B:  BTFSS  03.0
003C:  BCF    08.2
003D:  BSF    78.6
003E:  GOTO   045
003F:  BCF    78.6
0040:  DECFSZ 78,F
0041:  GOTO   038
0042:  GOTO   043
0043:  NOP
0044:  BSF    08.2
0045:  MOVLW  05
0046:  MOVWF  77
0047:  CLRF   04
0048:  DECFSZ 04,F
0049:  GOTO   048
004A:  DECFSZ 77,F
004B:  GOTO   047
004C:  MOVLW  61
004D:  MOVWF  04
004E:  DECFSZ 04,F
004F:  GOTO   04E
0050:  GOTO   051
0051:  BTFSC  78.7
0052:  GOTO   037
0053:  BTFSC  78.6
0054:  GOTO   03F
0055:  RETURN
....................  
....................  
....................  
.................... void main() 
.................... { 
*
008D:  CLRF   04
008E:  BCF    03.7
008F:  MOVLW  1F
0090:  ANDWF  03,F
0091:  BSF    03.5
0092:  BCF    08.2
0093:  BCF    03.5
0094:  BSF    08.2
0095:  BSF    03.5
0096:  BSF    1F.0
0097:  BSF    1F.1
0098:  BSF    1F.2
0099:  BCF    1F.3
009A:  MOVLW  07
009B:  MOVWF  1C
*
009F:  CLRF   30
....................    int16 leitura; 
....................     
....................    int8 possiveisValores[11]; 
....................    int maior ; 
....................    int cont; 
....................    int temperaturaBruta=0; 
....................     
....................  
....................  
....................     
....................    setup_adc(ADC_CLOCK_DIV_16); 
00A0:  BSF    03.5
00A1:  BSF    1F.6
00A2:  BCF    03.5
00A3:  BSF    1F.6
00A4:  BCF    1F.7
00A5:  BSF    03.5
00A6:  BSF    1F.7
00A7:  BCF    03.5
00A8:  BSF    1F.0
....................    setup_adc_ports(AN0); 
00A9:  BSF    03.5
00AA:  BCF    1F.0
00AB:  BSF    1F.1
00AC:  BSF    1F.2
00AD:  BSF    1F.3
....................   
....................    set_adc_channel(0); 
00AE:  MOVLW  00
00AF:  MOVWF  78
00B0:  BCF    03.5
00B1:  MOVF   1F,W
00B2:  ANDLW  C7
00B3:  IORWF  78,W
00B4:  MOVWF  1F
....................    delay_us(20); 
00B5:  MOVLW  21
00B6:  MOVWF  77
00B7:  DECFSZ 77,F
00B8:  GOTO   0B7
....................  
....................     
....................    while(TRUE){ 
....................       maior = 0; 
00B9:  CLRF   2E
....................       for(cont = 0; cont <= 10; cont++){ 
00BA:  CLRF   2F
00BB:  MOVF   2F,W
00BC:  SUBLW  0A
00BD:  BTFSS  03.0
00BE:  GOTO   0DE
....................          leitura = read_adc(); 
00BF:  BSF    1F.2
00C0:  BTFSC  1F.2
00C1:  GOTO   0C0
00C2:  BSF    03.5
00C3:  MOVF   1E,W
00C4:  BCF    03.5
00C5:  MOVWF  21
00C6:  MOVF   1E,W
00C7:  MOVWF  22
....................          delay_ms(10); 
00C8:  MOVLW  0A
00C9:  MOVWF  31
00CA:  CALL   004
....................          if(leitura<= 255){ 
00CB:  MOVF   22,W
00CC:  SUBLW  00
00CD:  BTFSS  03.0
00CE:  GOTO   0D6
....................              possiveisValores[cont] = (int8)leitura; 
00CF:  MOVLW  23
00D0:  ADDWF  2F,W
00D1:  MOVWF  04
00D2:  BCF    03.7
00D3:  MOVF   21,W
00D4:  MOVWF  00
....................          } 
....................          else{ 
00D5:  GOTO   0DC
....................              possiveisValores[cont] = 255; 
00D6:  MOVLW  23
00D7:  ADDWF  2F,W
00D8:  MOVWF  04
00D9:  BCF    03.7
00DA:  MOVLW  FF
00DB:  MOVWF  00
....................          } 
....................        
....................       } 
00DC:  INCF   2F,F
00DD:  GOTO   0BB
....................        
....................        for(cont = 0; cont <= 10; cont++){ 
00DE:  CLRF   2F
00DF:  MOVF   2F,W
00E0:  SUBLW  0A
00E1:  BTFSS  03.0
00E2:  GOTO   0F3
....................          if(maior < possiveisValores[cont]) { 
00E3:  MOVLW  23
00E4:  ADDWF  2F,W
00E5:  MOVWF  04
00E6:  BCF    03.7
00E7:  MOVF   00,W
00E8:  SUBWF  2E,W
00E9:  BTFSC  03.0
00EA:  GOTO   0F1
....................             maior = possiveisValores[cont]; 
00EB:  MOVLW  23
00EC:  ADDWF  2F,W
00ED:  MOVWF  04
00EE:  BCF    03.7
00EF:  MOVF   00,W
00F0:  MOVWF  2E
....................          } 
....................        
....................       } 
00F1:  INCF   2F,F
00F2:  GOTO   0DF
....................        
....................       temperaturaBruta = maior; 
00F3:  MOVF   2E,W
00F4:  MOVWF  30
....................        
....................       delay_ms(100); 
00F5:  MOVLW  64
00F6:  MOVWF  31
00F7:  CALL   004
....................        
....................       fprintf(leitura_lm35, "%u\np", temperaturaBruta); 
00F8:  MOVF   30,W
00F9:  MOVWF  31
00FA:  MOVLW  1B
00FB:  MOVWF  32
00FC:  GOTO   056
00FD:  MOVLW  0A
00FE:  MOVWF  33
00FF:  CALL   02D
0100:  MOVLW  70
0101:  MOVWF  33
0102:  CALL   02D
....................        
....................        
....................        
....................     
....................    } 
0103:  GOTO   0B9
....................  
.................... } 
....................  
....................  
....................  
....................  
0104:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
